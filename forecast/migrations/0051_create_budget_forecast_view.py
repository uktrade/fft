# Generated by Django 2.2.8 on 2020-01-16 18:27

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('forecast', '0050_auto_20200116_1204'),
    ]

    operations = [

        migrations.RunSQL(

            """
            DROP VIEW if exists forecast_forecast_budget_view ;
            DROP VIEW if exists yearly_budget;
            DROP VIEW if exists annual_forecast;
            
            CREATE VIEW annual_forecast as
                SELECT financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure
                GROUP BY financial_code_id,  financial_year_id;
                       
            CREATE VIEW yearly_budget as
                SELECT financial_code_id, financial_year_id, SUM(amount) AS budget
                FROM forecast_budgetmonthlyfigure
                GROUP BY financial_code_id, financial_year_id;
                      
            CREATE VIEW public.forecast_forecast_budget_view
            as
            SELECT coalesce(b.financial_code_id, f.financial_code_id) as financial_code_id,
                    coalesce(b.financial_year_id, f.financial_year_id) as financial_year,
                    coalesce(budget, 0) as budget,
                    coalesce(apr, 0) as apr,
                    coalesce(may, 0) as may,
                    coalesce(jun, 0) as jun,
                    coalesce(jul, 0) as jul,
                    coalesce(aug, 0) as aug,
                    coalesce(sep, 0) as sep,
                    coalesce(oct, 0) as oct,
                    coalesce(nov, 0) as nov,
                    coalesce("dec", 0) as "dec",
                    coalesce(jan, 0) as jan,
                    coalesce(feb, 0) as feb,
                    coalesce(mar, 0) as mar,
                    coalesce(adj1, 0) as adj1,
                    coalesce(adj2, 0) as adj2,
                    coalesce(adj3, 0) as adj3
            FROM annual_forecast f 
                FULL OUTER JOIN yearly_budget b
                    on b.financial_code_id = f.financial_code_id and b.financial_year_id = f.financial_year_id;                    
        """,
        """
            DROP VIEW if exists forecast_forecast_budget_view;
            DROP VIEW if exists yearly_budget;
                DROP VIEW if exists annual_forecast;
            """,
            )
            ]
