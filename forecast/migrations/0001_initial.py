# Generated by Django 2.2.10 on 2020-05-22 09:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('end_of_month', '0001_initial'),
        ('costcentre', '0001_initial'),
        ('chartofaccountDIT', '0002_data_20200522'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0002_data_20200522'),
    ]

    operations = [
        migrations.CreateModel(
            name='ForecastingDataView',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('financial_year', models.IntegerField()),
                ('budget', models.BigIntegerField(default=0)),
                ('apr', models.BigIntegerField(default=0)),
                ('may', models.BigIntegerField(default=0)),
                ('jun', models.BigIntegerField(default=0)),
                ('jul', models.BigIntegerField(default=0)),
                ('aug', models.BigIntegerField(default=0)),
                ('sep', models.BigIntegerField(default=0)),
                ('oct', models.BigIntegerField(default=0)),
                ('nov', models.BigIntegerField(default=0)),
                ('dec', models.BigIntegerField(default=0)),
                ('jan', models.BigIntegerField(default=0)),
                ('feb', models.BigIntegerField(default=0)),
                ('mar', models.BigIntegerField(default=0)),
                ('adj1', models.BigIntegerField(default=0)),
                ('adj2', models.BigIntegerField(default=0)),
                ('adj3', models.BigIntegerField(default=0)),
            ],
            options={
                'db_table': 'forecast_forecast_download_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OSCARReturn',
            fields=[
                ('row_number', models.BigIntegerField()),
                ('sub_segment_code', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('sub_segment_long_name', models.CharField(max_length=255)),
                ('apr', models.BigIntegerField(default=0)),
                ('may', models.BigIntegerField(default=0)),
                ('jun', models.BigIntegerField(default=0)),
                ('jul', models.BigIntegerField(default=0)),
                ('aug', models.BigIntegerField(default=0)),
                ('sep', models.BigIntegerField(default=0)),
                ('oct', models.BigIntegerField(default=0)),
                ('nov', models.BigIntegerField(default=0)),
                ('dec', models.BigIntegerField(default=0)),
                ('jan', models.BigIntegerField(default=0)),
                ('feb', models.BigIntegerField(default=0)),
                ('mar', models.BigIntegerField(default=0)),
            ],
            options={
                'db_table': 'forecast_oscarreturn',
                'ordering': ['sub_segment_code'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FinancialCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('analysis1_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='chartofaccountDIT.Analysis1')),
                ('analysis2_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='chartofaccountDIT.Analysis2')),
                ('cost_centre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='costcentre.CostCentre')),
            ],
            options={
                'permissions': [('can_view_forecasts', 'Can view forecast'), ('can_upload_files', 'Can upload files'), ('can_download_oscar', 'Can download OSCAR'), ('can_download_mi_reports', 'Can download mi reports')],
            },
        ),
        migrations.CreateModel(
            name='FinancialPeriod',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('financial_period_code', models.IntegerField(primary_key=True, serialize=False)),
                ('period_long_name', models.CharField(max_length=20)),
                ('period_short_name', models.CharField(max_length=10)),
                ('period_calendar_code', models.IntegerField()),
                ('actual_loaded', models.BooleanField(default=False)),
                ('display_figure', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['financial_period_code'],
            },
        ),
        migrations.CreateModel(
            name='ForecastEditState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('closed', models.BooleanField(default=False)),
                ('lock_date', models.DateField(blank=True, help_text='If the lock date is set, after this date the system will remain locked until the date is removed', null=True)),
            ],
            options={
                'verbose_name_plural': 'Forecast edit state',
                'permissions': [('can_set_edit_lock', 'Can set edit lock'), ('can_edit_whilst_closed', 'Can edit forecasts whilst system is closed'), ('can_edit_whilst_locked', 'Can edit forecasts whilst system is locked')],
                'default_permissions': ('view', 'change'),
            },
        ),
        migrations.CreateModel(
            name='ForecastExpenditureType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('nac_economic_budget_code', models.CharField(max_length=255, verbose_name='economic budget code')),
                ('forecast_expenditure_type_name', models.CharField(max_length=100)),
                ('forecast_expenditure_type_description', models.CharField(max_length=100)),
                ('forecast_expenditure_type_display_order', models.IntegerField()),
                ('programme_budget_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chartofaccountDIT.BudgetType')),
            ],
        ),
        migrations.CreateModel(
            name='UnlockedForecastEditor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SimpleHistoryUnlockedForecastEditor',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical unlocked forecast editor',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SimpleHistoryForecastMonthlyFigure',
            fields=[
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('amount', models.BigIntegerField(default=0)),
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('starting_amount', models.BigIntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('archived_status', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='end_of_month.EndOfMonthStatus')),
                ('financial_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='forecast.FinancialCode')),
                ('financial_period', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='forecast.FinancialPeriod')),
                ('financial_year', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.FinancialYear')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical forecast monthly figure',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SimpleHistoryForecastExpenditureType',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('nac_economic_budget_code', models.CharField(max_length=255, verbose_name='economic budget code')),
                ('forecast_expenditure_type_name', models.CharField(max_length=100)),
                ('forecast_expenditure_type_description', models.CharField(max_length=100)),
                ('forecast_expenditure_type_display_order', models.IntegerField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('programme_budget_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='chartofaccountDIT.BudgetType')),
            ],
            options={
                'verbose_name': 'historical forecast expenditure type',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SimpleHistoryForecastEditState',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('closed', models.BooleanField(default=False)),
                ('lock_date', models.DateField(blank=True, help_text='If the lock date is set, after this date the system will remain locked until the date is removed', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical forecast edit state',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SimpleHistoryFinancialPeriod',
            fields=[
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('financial_period_code', models.IntegerField(db_index=True)),
                ('period_long_name', models.CharField(max_length=20)),
                ('period_short_name', models.CharField(max_length=10)),
                ('period_calendar_code', models.IntegerField()),
                ('actual_loaded', models.BooleanField(default=False)),
                ('display_figure', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical financial period',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SimpleHistoryFinancialCode',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('analysis1_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='chartofaccountDIT.Analysis1')),
                ('analysis2_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='chartofaccountDIT.Analysis2')),
                ('cost_centre', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='costcentre.CostCentre')),
                ('forecast_expenditure_type', models.ForeignKey(blank=True, db_constraint=False, default=1, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='forecast.ForecastExpenditureType')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('natural_account_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='chartofaccountDIT.NaturalCode')),
                ('programme', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='chartofaccountDIT.ProgrammeCode')),
                ('project_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='chartofaccountDIT.ProjectCode')),
            ],
            options={
                'verbose_name': 'historical financial code',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SimpleHistoryBudgetUploadMonthlyFigure',
            fields=[
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('amount', models.BigIntegerField(default=0)),
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('financial_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='forecast.FinancialCode')),
                ('financial_period', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='forecast.FinancialPeriod')),
                ('financial_year', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.FinancialYear')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical budget upload monthly figure',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SimpleHistoryBudgetMonthlyFigure',
            fields=[
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('amount', models.BigIntegerField(default=0)),
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('starting_amount', models.BigIntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('archived_status', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='end_of_month.EndOfMonthStatus')),
                ('financial_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='forecast.FinancialCode')),
                ('financial_period', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='forecast.FinancialPeriod')),
                ('financial_year', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.FinancialYear')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical budget monthly figure',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SimpleHistoryActualUploadMonthlyFigure',
            fields=[
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('amount', models.BigIntegerField(default=0)),
                ('id', models.IntegerField(blank=True, db_index=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('financial_code', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='forecast.FinancialCode')),
                ('financial_period', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='forecast.FinancialPeriod')),
                ('financial_year', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.FinancialYear')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical actual upload monthly figure',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ForecastMonthlyFigure',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('amount', models.BigIntegerField(default=0)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('starting_amount', models.BigIntegerField(default=0)),
                ('archived_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='forecast_forecastmonthlyfigures', to='end_of_month.EndOfMonthStatus')),
                ('financial_code', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='forecast_forecastmonthlyfigures', to='forecast.FinancialCode')),
                ('financial_period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='forecast_forecastmonthlyfigures', to='forecast.FinancialPeriod')),
                ('financial_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.FinancialYear')),
            ],
        ),
        migrations.AddField(
            model_name='financialcode',
            name='forecast_expenditure_type',
            field=models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.PROTECT, to='forecast.ForecastExpenditureType'),
        ),
        migrations.AddField(
            model_name='financialcode',
            name='natural_account_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='chartofaccountDIT.NaturalCode'),
        ),
        migrations.AddField(
            model_name='financialcode',
            name='programme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='chartofaccountDIT.ProgrammeCode'),
        ),
        migrations.AddField(
            model_name='financialcode',
            name='project_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='chartofaccountDIT.ProjectCode'),
        ),
        migrations.CreateModel(
            name='BudgetUploadMonthlyFigure',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('amount', models.BigIntegerField(default=0)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('financial_code', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='forecast_budgetuploadmonthlyfigures', to='forecast.FinancialCode')),
                ('financial_period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='forecast_budgetuploadmonthlyfigures', to='forecast.FinancialPeriod')),
                ('financial_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.FinancialYear')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetMonthlyFigure',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('amount', models.BigIntegerField(default=0)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('starting_amount', models.BigIntegerField(default=0)),
                ('archived_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='forecast_budgetmonthlyfigures', to='end_of_month.EndOfMonthStatus')),
                ('financial_code', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='forecast_budgetmonthlyfigures', to='forecast.FinancialCode')),
                ('financial_period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='forecast_budgetmonthlyfigures', to='forecast.FinancialPeriod')),
                ('financial_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.FinancialYear')),
            ],
        ),
        migrations.CreateModel(
            name='ActualUploadMonthlyFigure',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('amount', models.BigIntegerField(default=0)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('financial_code', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='forecast_actualuploadmonthlyfigures', to='forecast.FinancialCode')),
                ('financial_period', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='forecast_actualuploadmonthlyfigures', to='forecast.FinancialPeriod')),
                ('financial_year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.FinancialYear')),
            ],
        ),
        migrations.AddConstraint(
            model_name='forecastmonthlyfigure',
            constraint=models.UniqueConstraint(condition=models.Q(archived_status__isnull=False), fields=('financial_code', 'financial_year', 'financial_period', 'archived_status'), name='ForecastMonthlyFigure_unique1'),
        ),
        migrations.AddConstraint(
            model_name='forecastmonthlyfigure',
            constraint=models.UniqueConstraint(condition=models.Q(archived_status__isnull=True), fields=('financial_code', 'financial_year', 'financial_period'), name='ForecastMonthlyFigure_unique2'),
        ),
        migrations.AlterUniqueTogether(
            name='forecastexpendituretype',
            unique_together={('nac_economic_budget_code', 'programme_budget_type')},
        ),
        migrations.AddConstraint(
            model_name='financialcode',
            constraint=models.UniqueConstraint(condition=models.Q(('analysis1_code__isnull', False), ('analysis2_code__isnull', False), ('project_code__isnull', False)), fields=('programme', 'cost_centre', 'natural_account_code', 'analysis1_code', 'analysis2_code', 'project_code'), name='financial_row_unique_6'),
        ),
        migrations.AddConstraint(
            model_name='financialcode',
            constraint=models.UniqueConstraint(condition=models.Q(('analysis1_code__isnull', True), ('analysis2_code__isnull', False), ('project_code__isnull', False)), fields=('programme', 'cost_centre', 'natural_account_code', 'analysis2_code', 'project_code'), name='financial_row_unique_5a'),
        ),
        migrations.AddConstraint(
            model_name='financialcode',
            constraint=models.UniqueConstraint(condition=models.Q(('analysis1_code__isnull', False), ('analysis2_code__isnull', True), ('project_code__isnull', False)), fields=('programme', 'cost_centre', 'natural_account_code', 'analysis1_code', 'project_code'), name='financial_row_unique_5b'),
        ),
        migrations.AddConstraint(
            model_name='financialcode',
            constraint=models.UniqueConstraint(condition=models.Q(('analysis1_code__isnull', False), ('analysis2_code__isnull', False), ('project_code__isnull', True)), fields=('programme', 'cost_centre', 'natural_account_code', 'analysis1_code', 'analysis2_code'), name='financial_row_unique_5c'),
        ),
        migrations.AddConstraint(
            model_name='financialcode',
            constraint=models.UniqueConstraint(condition=models.Q(('analysis1_code__isnull', True), ('analysis2_code__isnull', True), ('project_code__isnull', False)), fields=('programme', 'cost_centre', 'natural_account_code', 'project_code'), name='financial_row_unique_4a'),
        ),
        migrations.AddConstraint(
            model_name='financialcode',
            constraint=models.UniqueConstraint(condition=models.Q(('analysis1_code__isnull', False), ('analysis2_code__isnull', True), ('project_code__isnull', True)), fields=('programme', 'cost_centre', 'natural_account_code', 'analysis1_code'), name='financial_row_unique_4b'),
        ),
        migrations.AddConstraint(
            model_name='financialcode',
            constraint=models.UniqueConstraint(condition=models.Q(('analysis1_code__isnull', True), ('analysis2_code__isnull', False), ('project_code__isnull', True)), fields=('programme', 'cost_centre', 'natural_account_code', 'analysis2_code'), name='financial_row_unique_4c'),
        ),
        migrations.AddConstraint(
            model_name='financialcode',
            constraint=models.UniqueConstraint(condition=models.Q(('analysis1_code__isnull', True), ('analysis2_code__isnull', True), ('project_code__isnull', True)), fields=('programme', 'cost_centre', 'natural_account_code'), name='financial_row_unique_3'),
        ),
        migrations.AddConstraint(
            model_name='budgetuploadmonthlyfigure',
            constraint=models.UniqueConstraint(fields=('financial_code', 'financial_year', 'financial_period'), name='BudgetUploadMonthlyFigure_unique1'),
        ),
        migrations.AddConstraint(
            model_name='budgetmonthlyfigure',
            constraint=models.UniqueConstraint(condition=models.Q(archived_status__isnull=False), fields=('financial_code', 'financial_year', 'financial_period', 'archived_status'), name='BudgetMonthlyFigure_unique1'),
        ),
        migrations.AddConstraint(
            model_name='budgetmonthlyfigure',
            constraint=models.UniqueConstraint(condition=models.Q(archived_status__isnull=True), fields=('financial_code', 'financial_year', 'financial_period'), name='BudgetMonthlyFigure_unique2'),
        ),
        migrations.AddConstraint(
            model_name='actualuploadmonthlyfigure',
            constraint=models.UniqueConstraint(fields=('financial_code', 'financial_year', 'financial_period'), name='ActualUploadMonthlyFigure_unique1'),
        ),
    ]
