# Generated by Django 3.2.13 on 2022-09-01 16:01

from django.db import migrations

drop_sql = """
DROP VIEW IF EXISTS dw_budget_data;
DROP VIEW IF EXISTS dw_budget_ytd;
DROP VIEW IF EXISTS dw_full_year_budget;
DROP VIEW IF EXISTS dw_budget_full_table;

DROP VIEW IF EXISTS dw_no_budget_full_table;
DROP VIEW IF EXISTS dw_full_period_list_view;

"""

create_sql = """

CREATE VIEW dw_full_period_list_view as
   SELECT p.financial_period_code, p.period_short_name as financial_period_name,
    a.financial_period_code as archived_period_code, a.period_short_name as archived_period_name
  	from public.forecast_financialperiod p
 	cross join 
 	 public.dw_simulation_financial_period a WHERE p.financial_period_code < 13;



CREATE VIEW dw_no_budget_full_table as

SELECT distinct cost_centre_code, actual_nac, programme_code, contract_code, market_code, project_code, 
expenditure_type, expenditure_type_description, financial_code, 
0 as budget, t.financial_period_code, t.financial_period_name, t.archived_period_code, t.archived_period_name, 
financial_year, archiving_year
	FROM public.dw_simulation_mi_report_budget
	CROSS JOIN dw_full_period_list_view t;

CREATE VIEW dw_budget_full_table as
SELECT
       COALESCE(b.financial_code, f.financial_code) as financial_code,
	   COALESCE(b.cost_centre_code, f.cost_centre_code) as cost_centre_code,
       COALESCE(b.actual_nac,f.actual_nac) as actual_nac,
       COALESCE(b.programme_code, f.programme_code) as programme_code,
       COALESCE(b.contract_code, f.contract_code) as contract_code,
       COALESCE(b.market_code, f.market_code) as market_code,
       COALESCE(b.project_code, f.project_code) as project_code,
       COALESCE(b.expenditure_type, f.expenditure_type) as expenditure_type,
       COALESCE(b.expenditure_type_description, f.expenditure_type_description) as expenditure_type_description,
       COALESCE(b.financial_period_code, f.financial_period_code) as financial_period_code,
       COALESCE(b.financial_period_name, f.financial_period_name) as financial_period_name,
       COALESCE(b.archived_financial_period_code, f.archived_period_code) as archived_financial_period_code,
       COALESCE(b.financial_period_code_name, f.archived_period_name) as archived_financial_period_name,
       COALESCE(b.financial_year, f.financial_year) as financial_year,
       COALESCE(b.archiving_year,f.archiving_year) as archiving_year,
       COALESCE(b.budget, f.budget) as budget
        FROM dw_simulation_mi_report_budget b
        FULL OUTER JOIN dw_no_budget_full_table f 
			on b.financial_code = f.financial_code 
			AND b.archived_financial_period_code = f.archived_period_code 
		  	AND f.financial_period_code = b.financial_period_code and b.financial_year = f.financial_year; 

CREATE VIEW dw_full_year_budget as 
SELECT financial_code, sum(budget) as budget_outturn, archived_financial_period_code
	FROM dw_budget_full_table
	GROUP BY financial_code, archived_financial_period_code;

CREATE VIEW dw_budget_ytd as
SELECT financial_code, financial_period_code, archived_financial_period_code, sum(budget) 
OVER (PARTITION BY financial_code, archived_financial_period_code ORDER BY financial_period_code)
AS ytd_budget
	FROM public.dw_budget_full_table;
	
CREATE VIEW dw_budget_data as
SELECT 
        cost_centre_code, actual_nac, programme_code, 
        contract_code, market_code, project_code, expenditure_type, expenditure_type_description,        
        financial_period_name,
        archived_financial_period_name, financial_year, archiving_year,
        b.financial_code, 
        b.budget, 
        ytd_budget,
        b_o.budget_outturn,
        b.financial_period_code,  b.archived_financial_period_code
            FROM (public.dw_budget_full_table b
            JOIN public.dw_budget_ytd b_ytd on b_ytd.financial_code = b.financial_code 
                AND b.financial_period_code = b_ytd.financial_period_code 
                AND b.archived_financial_period_code = b_ytd.archived_financial_period_code)
            JOIN public.dw_full_year_budget b_o on b_o.financial_code = b.financial_code 
                AND b.archived_financial_period_code = b_o.archived_financial_period_code;


"""


class Migration(migrations.Migration):

    dependencies = [
        ('dw_simulation', '0002_previous_year'),
    ]

    operations = [
        migrations.RunSQL(
            f"{drop_sql} {create_sql}",
            drop_sql,
        ),
    ]
