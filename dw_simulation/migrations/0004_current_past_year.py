# Generated by Django 3.2.13 on 2022-09-01 16:05

from django.db import migrations

drop_sql = """
DROP VIEW IF EXISTS dw_current_past_year;
"""

create_sql = """

CREATE VIEW dw_current_past_year as
SELECT 
    COALESCE(c.cost_centre_code, p.cost_centre_code) as cost_centre_code,
    COALESCE(c.actual_nac, p.actual_nac) as actual_nac,
    COALESCE(c.programme_code, p.programme_code) as programme_code,
    COALESCE(c.contract_code, p.contract_code) as contract_code,
    COALESCE(c.market_code, p.market_code) as market_code,
    COALESCE(c.project_code, p.project_code) as project_code,
    COALESCE(c.expenditure_type, p.expenditure_type) as expenditure_type,
    COALESCE(c.expenditure_type_description, p.expenditure_type_description) as expenditure_type_description,
    COALESCE(c.financial_period_code, p.financial_period_code) as financial_period_code,
    COALESCE(c.financial_period_name, p.financial_period_name) as financial_period_name,
    COALESCE(c.archived_financial_period_code, p.archived_financial_period_code) as archived_financial_period_code,
    COALESCE(c.archived_financial_period_name, p.archived_financial_period_name) as archived_financial_period_name,
    COALESCE(c.archiving_year, p.archiving_year) as archiving_year,
    COALESCE(c.financial_year, p.financial_year) as financial_year,
    COALESCE(c.period_budget, 0) / 100 as period_budget,
    COALESCE(c.period_actual, 0) / 100 as period_actual,
    COALESCE(c.period_forecast, 0) / 100 as period_forecast,
    COALESCE(c.period_actual_forecast, 0) / 100 as period_actual_forecast,
    COALESCE(c.period_actual_forecast_budget_variance, 0) / 100 as period_actual_forecast_budget_variance,
    COALESCE(c.ytd_budget, 0) / 100 as ytd_budget,
    COALESCE(c.ytd_actual, 0) / 100 as ytd_actual,
    COALESCE(c.ytd_actual_forecast, 0) / 100 as ytd_actual_forecast,
    COALESCE(c.ytd_actual_forecast_budget_variance, 0) / 100 as ytd_actual_forecast_budget_variance,
    COALESCE(c.full_year_budget, 0) / 100 as full_year_budget,
    COALESCE(c.full_year_actual_forecast, 0) / 100 as full_year_actual_forecast,
    COALESCE(c.full_year_actual_forecast_budget_variance, 0) / 100 as full_year_actual_forecast_budget_variance,
    COALESCE(c.ytd_run_rate, 0) / 100 as ytd_run_rate,
    COALESCE(c.full_year_run_rate, 0) / 100 as full_year_run_rate,
    COALESCE(c.previous_period_forecast, 0) / 100 as period_previous_forecast,
    (COALESCE(c.period_actual_forecast, 0) - COALESCE(c.previous_period_forecast, 0)) / 100 as period_previous_forecast_variance,
    COALESCE(c.full_year_previous_forecast, 0) / 100 as full_year_previous_forecast,
    COALESCE(c.full_year_previous_forecast_variance, 0) / 100 as full_year_previous_forecast_variance,
    COALESCE(p.previous_year_period_actual, 0) / 100 as previous_year_period_actual,
    COALESCE(p.previous_year_outturn, 0) / 100 as previous_year_outturn,
    COALESCE(p.previous_year_ytd, 0) / 100 as previous_year_ytd
        FROM dw_previous_year_data p full outer join dw_current_year_data c
        ON
        COALESCE(c.cost_centre_code, '') = COALESCE(p.cost_centre_code, '') AND 
        COALESCE(c.actual_nac, 0) = COALESCE(p.actual_nac, 0) AND 
        COALESCE(c.programme_code, '') = COALESCE(p.programme_code, '') AND 
        COALESCE(c.contract_code, '') = COALESCE(p.contract_code, '') AND 
        COALESCE(c.market_code, '') = COALESCE(p.market_code, '') AND 
        COALESCE(c.project_code, '') = COALESCE(p.project_code, '') AND
        c.financial_period_code = p.financial_period_code AND
        c.archived_financial_period_code = p.archived_financial_period_code
        ;
"""
class Migration(migrations.Migration):

    dependencies = [
        ('dw_simulation', '0003_budget'),
    ]

    operations = [
        migrations.RunSQL(
            f"{drop_sql} {create_sql}",
            drop_sql,
        ),
    ]
