# Generated by Django 3.2.13 on 2022-08-18 16:00

from django.db import migrations

drop_previous_year_sql = """
DROP VIEW IF EXISTS
	mi_report_previous_year_actual;


"""

create_previous_year_sql = """
CREATE VIEW
	mi_report_previous_year_actual as	
SELECT financial_year_id + 1 as financial_year_id, 
        financial_code_id,
        12 as archived_period_id,
            unnest(array[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) as financial_period_id, 
            unnest(array[apr, may, jun, jul, aug, sep, 
                    oct, nov, "dec", jan, feb, mar]) as previous_year_actual
    FROM 
	(SELECT  
		coalesce(apr,0) as apr, 
		coalesce(may,0) as may, 
		coalesce(jun,0) as jun, 
		coalesce(jul,0) as jul,
		coalesce(aug,0) as aug,
		coalesce(sep,0) as sep, 
		coalesce(oct,0) as oct, 
		coalesce(nov,0) as nov, 
		coalesce("dec",0) as "dec", 
		coalesce(jan,0) as jan, 
	 	coalesce(feb,0) as feb, 
		coalesce(mar,0) + 
		coalesce(adj1,0) + 
		coalesce(adj2,0) + 
		coalesce(adj3,0) as mar,
		financial_code_id, financial_year_id
			FROM public.previous_years_archivedforecastdata
			 WHERE
				 (financial_year_id + 1) in 
				 (SELECT financial_year FROM core_financialyear where current = true)) p
        ;



"""


class Migration(migrations.Migration):

    dependencies = [
        ("mi_report_data", "0002_model"),
    ]

    operations = [
        migrations.RunSQL(
            f"{drop_previous_year_sql} {create_previous_year_sql}",
            drop_previous_year_sql,
        ),
    ]
