# Generated by Django 2.2.10 on 2020-05-19 16:49

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('end_of_month', '0004_monthlytotalbudget_simplehistorymonthlytotalbudget'),
    ]

    operations = [
        migrations.RunSQL(
            """
            DROP VIEW if exists monthly_forecast_apr CASCADE;
            DROP VIEW if exists monthly_forecast_may CASCADE;
            DROP VIEW if exists monthly_forecast_jun CASCADE;
            DROP VIEW if exists monthly_forecast_jul CASCADE;
            DROP VIEW if exists monthly_forecast_aug CASCADE;
            DROP VIEW if exists monthly_forecast_sep CASCADE;
            DROP VIEW if exists monthly_forecast_oct CASCADE;
            DROP VIEW if exists monthly_forecast_nov CASCADE;
            DROP VIEW if exists monthly_forecast_dec CASCADE;
            DROP VIEW if exists monthly_forecast_jan CASCADE;
            DROP VIEW if exists monthly_forecast_feb CASCADE;
            DROP VIEW if exists monthly_forecast_mar CASCADE;
            DROP VIEW if exists monthly_forecast_adj1 CASCADE;
            DROP VIEW if exists monthly_forecast_adj2 CASCADE;
            DROP VIEW if exists monthly_forecast_adj3 CASCADE;


           CREATE VIEW monthly_forecast_apr as
                SELECT 1 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
                    WHERE a.archived_period_id = 1
                GROUP BY financial_code_id,  financial_year_id;


           CREATE VIEW monthly_forecast_may as
                SELECT 2 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 and a.archived_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
                GROUP BY financial_code_id,  financial_year_id;

           CREATE VIEW monthly_forecast_jun as
                SELECT 3 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 and a.archived_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
               GROUP BY financial_code_id,  financial_year_id;

           CREATE VIEW monthly_forecast_jul as
                SELECT 4 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 and a.archived_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
                GROUP BY financial_code_id,  financial_year_id;

                CREATE VIEW monthly_forecast_aug as
                SELECT 5 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 and a.archived_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
                GROUP BY financial_code_id,  financial_year_id;

            CREATE VIEW monthly_forecast_sep as
                SELECT 6 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 and a.archived_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
                GROUP BY financial_code_id,  financial_year_id;

            CREATE VIEW monthly_forecast_oct as
                SELECT 7 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 and a.archived_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
                GROUP BY financial_code_id,  financial_year_id;

            CREATE VIEW monthly_forecast_nov as
                SELECT 8 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 and a.archived_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
                GROUP BY financial_code_id,  financial_year_id;

            CREATE VIEW monthly_forecast_dec as
                SELECT 9 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 and a.archived_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 and a.archived_period_id = 9 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 and a.archived_period_id = 9 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 and a.archived_period_id = 9 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 and a.archived_period_id = 9 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 and a.archived_period_id = 9 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 and a.archived_period_id = 9 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 and a.archived_period_id = 9 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
                GROUP BY financial_code_id,  financial_year_id;

            CREATE VIEW monthly_forecast_jan as
                SELECT 10 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 and a.archived_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 and a.archived_period_id = 9 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 and a.archived_period_id = 10 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 and a.archived_period_id = 10 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 and a.archived_period_id = 10 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 and a.archived_period_id = 10 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 and a.archived_period_id = 10 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 and a.archived_period_id = 10 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
                GROUP BY financial_code_id,  financial_year_id;

            CREATE VIEW monthly_forecast_feb as
                SELECT 11 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 and a.archived_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 and a.archived_period_id = 9 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 and a.archived_period_id = 10 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 and a.archived_period_id = 11 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 and a.archived_period_id = 11 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 and a.archived_period_id = 11 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 and a.archived_period_id = 11 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 and a.archived_period_id = 11 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
                GROUP BY financial_code_id,  financial_year_id;

            CREATE VIEW monthly_forecast_mar as
                SELECT 12 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 and a.archived_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 and a.archived_period_id = 9 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 and a.archived_period_id = 10 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 and a.archived_period_id = 11 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 and a.archived_period_id = 12 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 and a.archived_period_id = 12 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 and a.archived_period_id = 12 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 and a.archived_period_id = 12 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
                GROUP BY financial_code_id,  financial_year_id;

            CREATE VIEW monthly_forecast_adj1 as
                SELECT 13 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 and a.archived_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 and a.archived_period_id = 9 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 and a.archived_period_id = 10 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 and a.archived_period_id = 11 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 and a.archived_period_id = 12 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 and a.archived_period_id = 13 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 and a.archived_period_id = 13 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 and a.archived_period_id = 13 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
                GROUP BY financial_code_id,  financial_year_id;

            CREATE VIEW monthly_forecast_adj2 as
                SELECT 14 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 and a.archived_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 and a.archived_period_id = 9 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 and a.archived_period_id = 10 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 and a.archived_period_id = 11 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 and a.archived_period_id = 12 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 and a.archived_period_id = 13 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 and a.archived_period_id = 14 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 and a.archived_period_id = 14 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
                GROUP BY financial_code_id,  financial_year_id;

            CREATE VIEW monthly_forecast_adj3 as
                SELECT 15 as archived_period_id, financial_code_id, financial_year_id,
                       SUM(CASE WHEN financial_period_id = 1 and a.archived_period_id = 1 THEN amount ELSE NULL END) AS apr,
                       SUM(CASE WHEN financial_period_id = 2 and a.archived_period_id = 2 THEN amount ELSE NULL END) AS may,
                       SUM(CASE WHEN financial_period_id = 3 and a.archived_period_id = 3 THEN amount ELSE NULL END) AS jun,
                       SUM(CASE WHEN financial_period_id = 4 and a.archived_period_id = 4 THEN amount ELSE NULL END) AS jul,
                       SUM(CASE WHEN financial_period_id = 5 and a.archived_period_id = 5 THEN amount ELSE NULL END) AS aug,
                       SUM(CASE WHEN financial_period_id = 6 and a.archived_period_id = 6 THEN amount ELSE NULL END) AS sep,
                       SUM(CASE WHEN financial_period_id = 7 and a.archived_period_id = 7 THEN amount ELSE NULL END) AS oct,
                       SUM(CASE WHEN financial_period_id = 8 and a.archived_period_id = 8 THEN amount ELSE NULL END) AS nov,
                       SUM(CASE WHEN financial_period_id = 9 and a.archived_period_id = 9 THEN amount ELSE NULL END) AS "dec",
                       SUM(CASE WHEN financial_period_id = 10 and a.archived_period_id = 10 THEN amount ELSE NULL END) AS jan,
                       SUM(CASE WHEN financial_period_id = 11 and a.archived_period_id = 11 THEN amount ELSE NULL END) AS feb,
                       SUM(CASE WHEN financial_period_id = 12 and a.archived_period_id = 12 THEN amount ELSE NULL END) AS mar,
                       SUM(CASE WHEN financial_period_id = 13 and a.archived_period_id = 13 THEN amount ELSE NULL END) AS adj1 ,
                       SUM(CASE WHEN financial_period_id = 14 and a.archived_period_id = 14 THEN amount ELSE NULL END) AS adj2 ,
                       SUM(CASE WHEN financial_period_id = 15 and a.archived_period_id = 15 THEN amount ELSE NULL END) AS adj3
                FROM forecast_forecastmonthlyfigure inner join public.end_of_month_endofmonthstatus a
                on forecast_forecastmonthlyfigure.archived_status_id = a.id
                GROUP BY financial_code_id,  financial_year_id;
        """,
            """
           DROP VIEW if exists monthly_forecast_apr CASCADE;
            DROP VIEW if exists monthly_forecast_may CASCADE;
            DROP VIEW if exists monthly_forecast_jun CASCADE;
            DROP VIEW if exists monthly_forecast_jul CASCADE;
            DROP VIEW if exists monthly_forecast_aug CASCADE;
            DROP VIEW if exists monthly_forecast_sep CASCADE;
            DROP VIEW if exists monthly_forecast_oct CASCADE;
            DROP VIEW if exists monthly_forecast_nov CASCADE;
            DROP VIEW if exists monthly_forecast_dec CASCADE;
            DROP VIEW if exists monthly_forecast_jan CASCADE;
            DROP VIEW if exists monthly_forecast_feb CASCADE;
            DROP VIEW if exists monthly_forecast_mar CASCADE;
            DROP VIEW if exists monthly_forecast_adj1 CASCADE;
            DROP VIEW if exists monthly_forecast_adj2 CASCADE;
            DROP VIEW if exists monthly_forecast_adj3 CASCADE;
                """,
        )
    ]
