# Generated by Django 3.2.4 on 2021-07-30 11:08

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('treasurySS', '0002_auto_20210729_0846'),
    ]

    operations = [
        migrations.CreateModel(
            name='OSCARReturn',
            fields=[
                ('row_number', models.BigIntegerField()),
                ('sub_segment_code', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('sub_segment_long_name', models.CharField(max_length=255)),
                ('organization_code', models.CharField(max_length=50)),
                ('organization_alias', models.CharField(max_length=255)),
                ('apr', models.BigIntegerField(default=0)),
                ('may', models.BigIntegerField(default=0)),
                ('jun', models.BigIntegerField(default=0)),
                ('jul', models.BigIntegerField(default=0)),
                ('aug', models.BigIntegerField(default=0)),
                ('sep', models.BigIntegerField(default=0)),
                ('oct', models.BigIntegerField(default=0)),
                ('nov', models.BigIntegerField(default=0)),
                ('dec', models.BigIntegerField(default=0)),
                ('jan', models.BigIntegerField(default=0)),
                ('feb', models.BigIntegerField(default=0)),
                ('mar', models.BigIntegerField(default=0)),
                ('adj1', models.BigIntegerField(default=0)),
                ('adj2', models.BigIntegerField(default=0)),
                ('adj3', models.BigIntegerField(default=0)),
            ],
            options={
                'db_table': 'oscar_return_oscarreturn',
                'ordering': ['sub_segment_code'],
                'managed': False,
            },            
        ),
        migrations.RunSQL(
            """
                  DROP VIEW  if exists "oscar_return_oscarreturn";
                  CREATE VIEW "oscar_return_oscarreturn" as 
    
                  SELECT ROW_NUMBER () OVER (ORDER BY "treasurySS_subsegment"."sub_segment_code"),
                  coalesce("chartofaccountDIT_naturalcode"."account_L5_code_upload_id", "chartofaccountDIT_naturalcode"."account_L5_code_id")
                  account_l5_code,
                  "treasurySS_subsegment"."sub_segment_code" ,
                  "treasurySS_subsegment"."sub_segment_long_name" , 
                  "treasurySS_organizationcode"."organization_code", 
                  "treasurySS_organizationcode"."organization_alias",                  
                             ROUND(SUM(CASE WHEN financial_period_id = 1 THEN amount ELSE NULL END)/100000) AS apr,
                             ROUND(SUM(CASE WHEN financial_period_id = 2 THEN amount ELSE NULL END)/100000) AS may,
                             ROUND(SUM(CASE WHEN financial_period_id = 3 THEN amount ELSE NULL END)/100000) AS jun,
                             ROUND(SUM(CASE WHEN financial_period_id = 4 THEN amount ELSE NULL END)/100000) AS jul,
                             ROUND(SUM(CASE WHEN financial_period_id = 5 THEN amount ELSE NULL END)/100000) AS aug,
                             ROUND(SUM(CASE WHEN financial_period_id = 6 THEN amount ELSE NULL END)/100000) AS sep,
                             ROUND(SUM(CASE WHEN financial_period_id = 7 THEN amount ELSE NULL END)/100000) AS oct,
                             ROUND(SUM(CASE WHEN financial_period_id = 8 THEN amount ELSE NULL END)/100000) AS nov,
                             ROUND(SUM(CASE WHEN financial_period_id = 9 THEN amount ELSE NULL END)/100000) AS "dec",
                             ROUND(SUM(CASE WHEN financial_period_id = 10 THEN amount ELSE NULL END)/100000) AS jan,
                             ROUND(SUM(CASE WHEN financial_period_id = 11 THEN amount ELSE NULL END)/100000) AS feb,
                             ROUND(SUM(CASE WHEN financial_period_id = 12 THEN amount ELSE NULL END)/100000) AS mar,
                             ROUND(SUM(CASE WHEN financial_period_id = 13 THEN amount ELSE NULL END)/100000) AS adj1 ,
                             ROUND(SUM(CASE WHEN financial_period_id = 14 THEN amount ELSE NULL END)/100000) AS adj2 ,
                             ROUND(SUM(CASE WHEN financial_period_id = 15 THEN amount ELSE NULL END)/100000) AS adj3
              FROM "forecast_forecastmonthlyfigure"
                      INNER JOIN "forecast_financialcode" on (forecast_forecastmonthlyfigure.financial_code_id = forecast_financialcode.id)
                          LEFT OUTER JOIN "chartofaccountDIT_naturalcode"
                          ON ("forecast_financialcode"."natural_account_code_id" = "chartofaccountDIT_naturalcode"."natural_account_code")
                          INNER JOIN "costcentre_costcentre"
                          ON ("forecast_financialcode"."cost_centre_id" = "costcentre_costcentre"."cost_centre_code")
                          INNER JOIN "costcentre_directorate"
                          ON ("costcentre_costcentre"."directorate_id" = "costcentre_directorate"."directorate_code")
                          INNER JOIN "costcentre_departmentalgroup"
                          ON ("costcentre_directorate"."group_id" = "costcentre_departmentalgroup"."group_code")
                          INNER JOIN "chartofaccountDIT_programmecode" ON ("forecast_financialcode"."programme_id" = "chartofaccountDIT_programmecode"."programme_code")
                          LEFT OUTER JOIN "treasurySS_subsegment" ON ("costcentre_departmentalgroup"."treasury_segment_fk_id" = "treasurySS_subsegment"."Segment_code_id"
                          AND "chartofaccountDIT_programmecode"."budget_type_id" = "treasurySS_subsegment"."dit_budget_type_id")
                          INNER JOIN "core_financialyear" ON ("forecast_forecastmonthlyfigure"."financial_year_id" = "core_financialyear"."financial_year")
                          LEFT JOIN "treasurySS_segment" ON "treasurySS_subsegment"."Segment_code_id" = "treasurySS_segment".segment_code
                          LEFT JOIN "treasurySS_organizationcode" ON "treasurySS_organizationcode".id = "treasurySS_segment".organization_id
    
                          WHERE "core_financialyear"."current" = TRUE 
                          AND "forecast_forecastmonthlyfigure"."archived_status_id" is NULL
                          GROUP BY coalesce("chartofaccountDIT_naturalcode"."account_L5_code_upload_id", "chartofaccountDIT_naturalcode"."account_L5_code_id"),
                                "treasurySS_organizationcode".organization_code, 
                                "treasurySS_organizationcode"."organization_alias",                  
                                "treasurySS_subsegment"."sub_segment_code" ;  
              """,
            'DROP VIEW "oscar_return_oscarreturn";',
        ),

    ]
