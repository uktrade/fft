version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.1 # /PS-IGNORE
jobs:
  build:
    docker:
      - image: cimg/python:3.9-browsers
        environment:
          FLASK_CONFIG: testing
          DATABASE_CREDENTIALS: '{"password":"postgres","dbname":"fido_test","engine":"postgres","port":5432,"host":"localhost","username":"ubuntu"}'
          DJANGO_SETTINGS_MODULE: config.settings.ci
          SECRET_KEY: used_for_testing
          ALLOWED_HOSTS: "*"
          SELENIUM_ADDRESS: localhost
          SELENIUM_HOST: localhost
          USE_SELENIUM_HUB: False
      - image: circleci/postgres:11-alpine-ram
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: fido_test
          POSTGRES_PASSWORD: postgres

    steps:
      - browser-tools/install-browser-tools:
          chrome-version: 116.0.5845.110
          replace-existing: true
      - checkout
      - run: mkdir test-reports
      - run:
          name: Download Selenium
          command: |
            curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Start Selenium
          command: |
            java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true
      - run:
          name: Install Python deps
          command: |
            pip install -r requirements/dev.txt
      - run:
          name: Install latest NPM
          command: npm install npm
      - run:
          name: Install front end deps
          command: npm install
      - run:
          name: Install React app
          command: npm run build
      - run:
          name: Collect static
          command: |
            python manage.py collectstatic --noinput
      - run:
          name: Compile CSS
          command: |
            python manage.py compilescss
      - run:
          name: Run tests
          command: |
            pytest --ignore=node_modules --ignore=front_end --ignore=features --ignore=staticfiles -n 4
      - run:
          name: Run BDD tests
          command: |
            python manage.py behave --settings=config.settings.bdd
      - run:
          name: Run Flake8
          command: |
            python -m flake8
      - run:
          name: Run isort
          command: |
            python -m isort --check .
      - run:
          name: Run black
          command: |
            python -m black --check .

      - store_artifacts:
          path: test-reports/
          destination: tr1
      - store_test_results:
          path: test-reports/
