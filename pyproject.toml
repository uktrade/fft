[tool.poetry]
name = "fft"
version = "0.1.0"
description = ""
authors = ["Live Services <live.services@digital.trade.gov.uk>"]
license = "MIT"
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.9"
celery = "^5.3.6"
dj-database-url = "^2.1.0"
django = "^4.2.11"
django-admin-list-filter-dropdown = "^1.0.3"
django-autocomplete-light = "^3.10.0"
django-axes = "^6.4.0"
django-environ = "^0.11.2"
django-extensions = "^3.2.3"
django-filter = "^24.1"
django-guardian = "^2.4.0"
django-log-formatter-ecs = "^0.0.5"
django-pivot = "^1.10"
django-redis = "^5.4.0"
django-reversion = "^5.0.12"
django-settings-export = "^1.2.1"
django-simple-history = "^3.5.0"
django-staff-sso-client = "^4.2.2"
django-tables2 = "2.4.0"
djangorestframework = "^3.14.0"
elastic-apm = "^6.20.0"
future = "^1.0.0"
gunicorn = "^21.2.0"
psycopg2 = "^2.9.9"
python-dotenv = "^1.0.1"
raven = "^6.10.0"
django-chunk-upload-handlers = "^0.0.14"
sentry-sdk = "1.25.1"
whitenoise = "^6.6.0"
mohawk = "1.1.0"

# Locked versions (not direct dependencies)
boto3 = "1.17.89"
botocore = "1.20.89"
certifi = "^2023.7.22"
chardet = "3.0.4"
diff-match-patch = "20121119"
django-appconf = "1.0.4"
django-storages = "1.11.1"
et-xmlfile = "1.0.1"
idna = "2.7"
jdcal = "1.3"
jmespath = "0.9.3"
mccabe = "0.6.1"
oauthlib = "2.1.0"
odfpy = "1.3.6"
openpyxl = "3.0.5"
parso = "0.1.1"
prompt-toolkit = "1.0.15"
ptyprocess = "0.5.2"
public = "1.0.3"
pyparsing = "2.2.0"
pytz = "2021.3"
pyyaml = "^6"
redis = "3.5.3"
requests = "^2.25.1"
requests-oauthlib = "1.0.0"
s3transfer = "0.4.2"
six = "1.15.0"
sqlparse = "^0.4.4"
tablib = { version = "2.0.0", extras = ["html", "ods", "xls", "xlsx", "yaml"] }
urllib3 = "^1.26.16"
wcwidth = "0.1.7"
xlrd = "1.1.0"
xlwt = "1.3.0"
zipp = "3.1.0"
zope-event = "4.4"
zope-interface = "5.1.0"


[tool.poetry.group.prod]
optional = true

[tool.poetry.group.prod.dependencies]
gevent = "^23.9.0"
psycogreen = "1.0.2"
django-audit-log-middleware = "0.0.4"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
faker = "4.1.1"
factory-boy = "2.12.0"
selenium = "^4.18.1"
beautifulsoup4 = "4.9.1"
black = "22.3.0"
flake8 = "*"
pytest = "*"
pytest-cov = "*"
pytest-django = "*"
pytest-xdist = "*"
behave-django = "1.4.0"
pyperclip = "1.8.0"
freezegun = "1.0.0"
pip-tools = "6.8.0"
isort = "5.10.1"

# Locked versions (not direct dependencies)
build = "0.8.0"
colorama = "0.4.3"
configparser = "5.0.0"
coverage = "5.2"
crayons = "0.3.1"
defusedxml = "0.7.1"
execnet = "1.7.1"
mypy-extensions = "0.4.3"
packaging = "20.4"
parse-type = "0.5.2"
parse = "1.15.0"
pathspec = "0.9.0"
pip = "23.3"
platformdirs = "2.5.1"
pyproject-hooks = "1.0.0"
soupsieve = "1.9.6"
wheel = "0.38.1"
pep517 = "0.10.0"
apipkg = "1.5"
toml = "0.10.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.isort]
profile = "black"
multi_line_output = 3
skip_gitignore = true
line_length = 88
lines_after_imports = 2

[tool.black]
# Exclude files with # noqa directive for flake8. They have long lines,
# and black will move the flake8 directive to a new line, and flake8 will complain.
exclude = '''
(
    \.direnv
    | \.env
    | \.git
    | \.venv
    | venv
    | _build
    | build
    | dist
    | node_modules
    | chartofaccountDIT/filters.py
    | chartofaccountDIT/models.py
    | data_lake/views/fco_mapping.py
    | forecast/views/base.py
    | upload_split_file/downloads.py
)
'''
